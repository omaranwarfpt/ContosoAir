# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
  vmImage: 'ubuntu-latest'
trigger:
  - master
# THESE STEPS REMOVED TO ADD TESTS
# steps:
#   - task: CopyFiles@2
#     displayName: 'Copy Files to: $(build.artifactstagingdirectory)/Templates'
#     inputs:
#       SourceFolder: deployment
#       Contents: '*.json'
#       TargetFolder: '$(build.artifactstagingdirectory)/Templates'
#   - task: Npm@1
#     displayName: 'npm custom'
#     inputs:
#       command: custom
#       verbose: false
#       customCommand: 'install --production'
#   - task: ArchiveFiles@2
#     displayName: 'Archive $(Build.SourcesDirectory)'
#     inputs:
#       rootFolderOrFile: '$(Build.SourcesDirectory)'
#       includeRootFolder: false
#   - task: PublishBuildArtifacts@1
#     displayName: 'Publish Artifact: drop'

steps:
  - task: Npm@1
    inputs:
      command: 'custom'
      customcommand: 'install --production'
  - script: |
      npm install
      npm test
    displayName: 'Run unit tests'
    continueOnError: true
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: $(System.DefaultWorkingDirectory)/test-report.xml
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Code Coverage'
    condition: 'in(variables[''Agent.JobStatus''], ''Succeeded'')'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/*coverage.xml'
      reportDirectory: $(System.DefaultWorkingDirectory)/coverage
  - task: ArchiveFiles@2
    displayName: 'Archive sources'
    inputs:
      rootFolderOrFile: $(Build.SourcesDirectory)
      includeRootFolder: false
  - task: CopyFiles@2
    displayName: 'Copy ARM templates'
    inputs:
      SourceFolder: deployment
      Contents: '*.json'
      TargetFolder: $(build.artifactstagingdirectory)/Templates
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'